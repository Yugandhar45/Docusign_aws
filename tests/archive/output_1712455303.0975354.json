{"content": {"suites": {"0": {"status": {"total_pass": 1, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}, "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_change_sign_size", "rerun": "0"}}, "suite_name": "test_change_sign_tag_size.py"}, "1": {"suite_name": "test_create_new_user_verify_email_preferences.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_verify_email_preferences", "rerun": "0"}}, "status": {"total_pass": 1, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "2": {"suite_name": "test_decline_envelope.py", "tests": {"0": {"status": "ERROR", "message": "request = <SubRequest 'test_setup' for <Function test_declineEnvelope>>\n\n    @pytest.fixture(scope='class')\n    def test_setup(request):\n        driver = None\n        browser = request.config.getoption(\"--browser\")\n        if browser == \"chrome\":\n            download_path = os.path.abspath(constants.download_path)\n            options = webdriver.ChromeOptions()\n            options.add_argument(\"disable-features=DownloadUI\")\n            options.add_experimental_option(\"prefs\", {\n                \"download.default_directory\": download_path,\n                \"plugins.plugins_disabled\": [\"Chrome PDF Viewer\"],\n                \"download.prompt_for_download\": False,\n                \"download.directory_upgrade\": True,\n                \"safebrowsing.enabled\": True\n            })\n>           driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()), options=options)\n\nconftest.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:69: in __init__\n    super().__init__(DesiredCapabilities.CHROME['browserName'], \"goog\",\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py:92: in __init__\n    super().__init__(\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:277: in __init__\n    self.start_session(capabilities, browser_profile)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:370: in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:435: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001E0B1EB4390>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: Chrome failed to sta...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77D37C5E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77D37C2E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"{}.{}\".format(frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\nE         (session not created: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00CB4CE3+225091]\nE       \t(No symbol) [0x00BE4E31]\nE       \t(No symbol) [0x00A89A7A]\nE       \t(No symbol) [0x00AB198C]\nE       \t(No symbol) [0x00AACF19]\nE       \t(No symbol) [0x00AE7C71]\nE       \t(No symbol) [0x00AE790A]\nE       \t(No symbol) [0x00ADF2F6]\nE       \t(No symbol) [0x00AB79B9]\nE       \t(No symbol) [0x00AB879D]\nE       \tsqlite3_dbdata_init [0x01129A83+4064547]\nE       \tsqlite3_dbdata_init [0x0113108A+4094762]\nE       \tsqlite3_dbdata_init [0x0112B988+4072488]\nE       \tsqlite3_dbdata_init [0x00E2C9E9+930953]\nE       \t(No symbol) [0x00BF0804]\nE       \t(No symbol) [0x00BEAD28]\nE       \t(No symbol) [0x00BEAE51]\nE       \t(No symbol) [0x00BDCAC0]\nE       \tBaseThreadInitThunk [0x77B1FCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77D37C5E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77D37C2E+238]\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: SessionNotCreatedException\n", "test_name": "test_declineEnvelope", "rerun": "0"}, "1": {"status": "ERROR", "message": "request = <SubRequest 'test_setup' for <Function test_declineEnvelope>>\n\n    @pytest.fixture(scope='class')\n    def test_setup(request):\n        driver = None\n        browser = request.config.getoption(\"--browser\")\n        if browser == \"chrome\":\n            download_path = os.path.abspath(constants.download_path)\n            options = webdriver.ChromeOptions()\n            options.add_argument(\"disable-features=DownloadUI\")\n            options.add_experimental_option(\"prefs\", {\n                \"download.default_directory\": download_path,\n                \"plugins.plugins_disabled\": [\"Chrome PDF Viewer\"],\n                \"download.prompt_for_download\": False,\n                \"download.directory_upgrade\": True,\n                \"safebrowsing.enabled\": True\n            })\n>           driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()), options=options)\n\nconftest.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:69: in __init__\n    super().__init__(DesiredCapabilities.CHROME['browserName'], \"goog\",\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py:92: in __init__\n    super().__init__(\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:277: in __init__\n    self.start_session(capabilities, browser_profile)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:370: in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:435: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001E0B1EB4390>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: Chrome failed to sta...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77D37C5E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77D37C2E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"{}.{}\".format(frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: Chrome failed to start: exited normally.\nE         (session not created: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00CB4CE3+225091]\nE       \t(No symbol) [0x00BE4E31]\nE       \t(No symbol) [0x00A89A7A]\nE       \t(No symbol) [0x00AB198C]\nE       \t(No symbol) [0x00AACF19]\nE       \t(No symbol) [0x00AE7C71]\nE       \t(No symbol) [0x00AE790A]\nE       \t(No symbol) [0x00ADF2F6]\nE       \t(No symbol) [0x00AB79B9]\nE       \t(No symbol) [0x00AB879D]\nE       \tsqlite3_dbdata_init [0x01129A83+4064547]\nE       \tsqlite3_dbdata_init [0x0113108A+4094762]\nE       \tsqlite3_dbdata_init [0x0112B988+4072488]\nE       \tsqlite3_dbdata_init [0x00E2C9E9+930953]\nE       \t(No symbol) [0x00BF0804]\nE       \t(No symbol) [0x00BEAD28]\nE       \t(No symbol) [0x00BEAE51]\nE       \t(No symbol) [0x00BDCAC0]\nE       \tBaseThreadInitThunk [0x77B1FCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77D37C5E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77D37C2E+238]\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: SessionNotCreatedException\n", "test_name": "test_verify_decline_notification", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 2}}, "3": {"suite_name": "test_not_allowtoDelete_signed_doc.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_NoDel_SignedDoc", "rerun": "0"}}, "status": {"total_pass": 1, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "4": {"suite_name": "test_send_envelope_without_sign_tags.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_send_env_NoSign_tags", "rerun": "0"}}, "status": {"total_pass": 1, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "5": {"suite_name": "test_send_template_and_complete_sign.py", "tests": {"0": {"status": "FAIL", "message": "   selenium.common.exceptions.TimeoutException: Message: \n   Stacktrace:\n   \tGetHandleVerifier [0x00CB4CE3+225091]\n   \t(No symbol) [0x00BE4E31]\n   \t(No symbol) [0x00A89A7A]\n   \t(No symbol) [0x00AC175B]\n   \t(No symbol) [0x00AC188B]\n   \t(No symbol) [0x00AF7882]\n   \t(No symbol) [0x00ADF5A4]\n   \t(No symbol) [0x00AF5CB0]\n   \t(No symbol) [0x00ADF2F6]\n   \t(No symbol) [0x00AB79B9]\n   \t(No symbol) [0x00AB879D]\n   \tsqlite3_dbdata_init [0x01129A83+4064547]\n   \tsqlite3_dbdata_init [0x0113108A+4094762]\n   \tsqlite3_dbdata_init [0x0112B988+4072488]\n   \tsqlite3_dbdata_init [0x00E2C9E9+930953]\n   \t(No symbol) [0x00BF0804]\n   \t(No symbol) [0x00BEAD28]\n   \t(No symbol) [0x00BEAE51]\n   \t(No symbol) [0x00BDCAC0]\n   \tBaseThreadInitThunk [0x77B1FCC9+25]\n   \tRtlGetAppContainerNamedObjectPath [0x77D37C5E+286]\n   \tRtlGetAppContainerNamedObjectPath [0x77D37C2E+238]\n", "test_name": "test_sendTemplate_approve", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 1, "total_error": 0}}, "6": {"suite_name": "test_upload_envelope_and_sign.py", "tests": {"0": {"status": "FAIL", "message": "   selenium.common.exceptions.TimeoutException: Message: \n   Stacktrace:\n   \tGetHandleVerifier [0x00CB4CE3+225091]\n   \t(No symbol) [0x00BE4E31]\n   \t(No symbol) [0x00A89A7A]\n   \t(No symbol) [0x00AC175B]\n   \t(No symbol) [0x00AC188B]\n   \t(No symbol) [0x00AF7882]\n   \t(No symbol) [0x00ADF5A4]\n   \t(No symbol) [0x00AF5CB0]\n   \t(No symbol) [0x00ADF2F6]\n   \t(No symbol) [0x00AB79B9]\n   \t(No symbol) [0x00AB879D]\n   \tsqlite3_dbdata_init [0x01129A83+4064547]\n   \tsqlite3_dbdata_init [0x0113108A+4094762]\n   \tsqlite3_dbdata_init [0x0112B988+4072488]\n   \tsqlite3_dbdata_init [0x00E2C9E9+930953]\n   \t(No symbol) [0x00BF0804]\n   \t(No symbol) [0x00BEAD28]\n   \t(No symbol) [0x00BEAE51]\n   \t(No symbol) [0x00BDCAC0]\n   \tBaseThreadInitThunk [0x77B1FCC9+25]\n   \tRtlGetAppContainerNamedObjectPath [0x77D37C5E+286]\n   \tRtlGetAppContainerNamedObjectPath [0x77D37C2E+238]\n", "test_name": "test_send_envelope_approve", "rerun": "0"}, "1": {"status": "FAIL", "message": "   selenium.common.exceptions.TimeoutException: Message: \n   Stacktrace:\n   \tGetHandleVerifier [0x00CB4CE3+225091]\n   \t(No symbol) [0x00BE4E31]\n   \t(No symbol) [0x00A89A7A]\n   \t(No symbol) [0x00AC175B]\n   \t(No symbol) [0x00AC188B]\n   \t(No symbol) [0x00AF7882]\n   \t(No symbol) [0x00ADF5A4]\n   \t(No symbol) [0x00AF5CB0]\n   \t(No symbol) [0x00ADF2F6]\n   \t(No symbol) [0x00AB79B9]\n   \t(No symbol) [0x00AB879D]\n   \tsqlite3_dbdata_init [0x01129A83+4064547]\n   \tsqlite3_dbdata_init [0x0113108A+4094762]\n   \tsqlite3_dbdata_init [0x0112B988+4072488]\n   \tsqlite3_dbdata_init [0x00E2C9E9+930953]\n   \t(No symbol) [0x00BF0804]\n   \t(No symbol) [0x00BEAD28]\n   \t(No symbol) [0x00BEAE51]\n   \t(No symbol) [0x00BDCAC0]\n   \tBaseThreadInitThunk [0x77B1FCC9+25]\n   \tRtlGetAppContainerNamedObjectPath [0x77D37C5E+286]\n   \tRtlGetAppContainerNamedObjectPath [0x77D37C2E+238]\n", "test_name": "test_download_allDocuments", "rerun": "0"}, "2": {"status": "FAIL", "message": "   selenium.common.exceptions.TimeoutException: Message: \n   Stacktrace:\n   \tGetHandleVerifier [0x00CB4CE3+225091]\n   \t(No symbol) [0x00BE4E31]\n   \t(No symbol) [0x00A89A7A]\n   \t(No symbol) [0x00AC175B]\n   \t(No symbol) [0x00AC188B]\n   \t(No symbol) [0x00AF7882]\n   \t(No symbol) [0x00ADF5A4]\n   \t(No symbol) [0x00AF5CB0]\n   \t(No symbol) [0x00ADF2F6]\n   \t(No symbol) [0x00AB79B9]\n   \t(No symbol) [0x00AB879D]\n   \tsqlite3_dbdata_init [0x01129A83+4064547]\n   \tsqlite3_dbdata_init [0x0113108A+4094762]\n   \tsqlite3_dbdata_init [0x0112B988+4072488]\n   \tsqlite3_dbdata_init [0x00E2C9E9+930953]\n   \t(No symbol) [0x00BF0804]\n   \t(No symbol) [0x00BEAD28]\n   \t(No symbol) [0x00BEAE51]\n   \t(No symbol) [0x00BDCAC0]\n   \tBaseThreadInitThunk [0x77B1FCC9+25]\n   \tRtlGetAppContainerNamedObjectPath [0x77D37C5E+286]\n   \tRtlGetAppContainerNamedObjectPath [0x77D37C2E+238]\n", "test_name": "test_envelope_completion_notification", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 3, "total_error": 0}}, "7": {"suite_name": "test_validate_user_actions_when_envelope_inprocess.py", "tests": {"0": {"status": "FAIL", "message": "   selenium.common.exceptions.TimeoutException: Message: \n   Stacktrace:\n   \tGetHandleVerifier [0x00CB4CE3+225091]\n   \t(No symbol) [0x00BE4E31]\n   \t(No symbol) [0x00A89A7A]\n   \t(No symbol) [0x00AC175B]\n   \t(No symbol) [0x00AC188B]\n   \t(No symbol) [0x00AF7882]\n   \t(No symbol) [0x00ADF5A4]\n   \t(No symbol) [0x00AF5CB0]\n   \t(No symbol) [0x00ADF2F6]\n   \t(No symbol) [0x00AB79B9]\n   \t(No symbol) [0x00AB879D]\n   \tsqlite3_dbdata_init [0x01129A83+4064547]\n   \tsqlite3_dbdata_init [0x0113108A+4094762]\n   \tsqlite3_dbdata_init [0x0112B988+4072488]\n   \tsqlite3_dbdata_init [0x00E2C9E9+930953]\n   \t(No symbol) [0x00BF0804]\n   \t(No symbol) [0x00BEAD28]\n   \t(No symbol) [0x00BEAE51]\n   \t(No symbol) [0x00BDCAC0]\n   \tBaseThreadInitThunk [0x77B1FCC9+25]\n   \tRtlGetAppContainerNamedObjectPath [0x77D37C5E+286]\n   \tRtlGetAppContainerNamedObjectPath [0x77D37C2E+238]\n", "test_name": "test_validate_user_action", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 1, "total_error": 0}}, "8": {"suite_name": "test_verify_comment_field.py", "tests": {"0": {"status": "FAIL", "message": "   selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n     (Session info: chrome=123.0.6312.106)\n   Stacktrace:\n   \tGetHandleVerifier [0x00CB4CE3+225091]\n   \t(No symbol) [0x00BE4E31]\n   \t(No symbol) [0x00A89A7A]\n   \t(No symbol) [0x00A8DEB0]\n   \t(No symbol) [0x00A8F862]\n   \t(No symbol) [0x00A8F8E0]\n   \t(No symbol) [0x00AC2F31]\n   \t(No symbol) [0x00AB96B2]\n   \t(No symbol) [0x00ADF55C]\n   \t(No symbol) [0x00AB930E]\n   \t(No symbol) [0x00ADF7F4]\n   \t(No symbol) [0x00AF5CB0]\n   \t(No symbol) [0x00ADF2F6]\n   \t(No symbol) [0x00AB79B9]\n   \t(No symbol) [0x00AB879D]\n   \tsqlite3_dbdata_init [0x01129A83+4064547]\n   \tsqlite3_dbdata_init [0x0113108A+4094762]\n   \tsqlite3_dbdata_init [0x0112B988+4072488]\n   \tsqlite3_dbdata_init [0x00E2C9E9+930953]\n   \t(No symbol) [0x00BF0804]\n   \t(No symbol) [0x00BEAD28]\n   \t(No symbol) [0x00BEAE51]\n   \t(No symbol) [0x00BDCAC0]\n   \tBaseThreadInitThunk [0x77B1FCC9+25]\n   \tRtlGetAppContainerNamedObjectPath [0x77D37C5E+286]\n   \tRtlGetAppContainerNamedObjectPath [0x77D37C2E+238]\n", "test_name": "test_verify_comment_field", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 1, "total_error": 0}}, "9": {"suite_name": "test_verify_date_time_format.py", "tests": {"0": {"status": "FAIL", "message": "   selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\n   from unknown error: web view not found\n     (Session info: chrome=123.0.6312.106)\n   Stacktrace:\n   \tGetHandleVerifier [0x00CB4CE3+225091]\n   \t(No symbol) [0x00BE4E31]\n   \t(No symbol) [0x00A89A7A]\n   \t(No symbol) [0x00A6E312]\n   \t(No symbol) [0x00AE517B]\n   \t(No symbol) [0x00AF55A6]\n   \t(No symbol) [0x00ADF2F6]\n   \t(No symbol) [0x00AB79B9]\n   \t(No symbol) [0x00AB879D]\n   \tsqlite3_dbdata_init [0x01129A83+4064547]\n   \tsqlite3_dbdata_init [0x0113108A+4094762]\n   \tsqlite3_dbdata_init [0x0112B988+4072488]\n   \tsqlite3_dbdata_init [0x00E2C9E9+930953]\n   \t(No symbol) [0x00BF0804]\n   \t(No symbol) [0x00BEAD28]\n   \t(No symbol) [0x00BEAE51]\n   \t(No symbol) [0x00BDCAC0]\n   \tBaseThreadInitThunk [0x77B1FCC9+25]\n   \tRtlGetAppContainerNamedObjectPath [0x77D37C5E+286]\n   \tRtlGetAppContainerNamedObjectPath [0x77D37C2E+238]\n", "test_name": "test_verify_date_time_format", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 1, "total_error": 0}}, "10": {"suite_name": "test_verify_envelope_history.py", "tests": {"0": {"status": "FAIL", "message": "   selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\n   from unknown error: web view not found\n     (Session info: chrome=123.0.6312.106)\n   Stacktrace:\n   \tGetHandleVerifier [0x00CB4CE3+225091]\n   \t(No symbol) [0x00BE4E31]\n   \t(No symbol) [0x00A89A7A]\n   \t(No symbol) [0x00A6E312]\n   \t(No symbol) [0x00AE517B]\n   \t(No symbol) [0x00AF55A6]\n   \t(No symbol) [0x00ADF2F6]\n   \t(No symbol) [0x00AB79B9]\n   \t(No symbol) [0x00AB879D]\n   \tsqlite3_dbdata_init [0x01129A83+4064547]\n   \tsqlite3_dbdata_init [0x0113108A+4094762]\n   \tsqlite3_dbdata_init [0x0112B988+4072488]\n   \tsqlite3_dbdata_init [0x00E2C9E9+930953]\n   \t(No symbol) [0x00BF0804]\n   \t(No symbol) [0x00BEAD28]\n   \t(No symbol) [0x00BEAE51]\n   \t(No symbol) [0x00BDCAC0]\n   \tBaseThreadInitThunk [0x77B1FCC9+25]\n   \tRtlGetAppContainerNamedObjectPath [0x77D37C5E+286]\n   \tRtlGetAppContainerNamedObjectPath [0x77D37C2E+238]\n", "test_name": "test_verify_envelopeHistory_auditLogs", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 1, "total_error": 0}}, "11": {"suite_name": "test_verify_receiver_receives_envelope.py", "tests": {"0": {"status": "FAIL", "message": "   selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\n   from unknown error: web view not found\n     (Session info: chrome=123.0.6312.106)\n   Stacktrace:\n   \tGetHandleVerifier [0x00CB4CE3+225091]\n   \t(No symbol) [0x00BE4E31]\n   \t(No symbol) [0x00A89A7A]\n   \t(No symbol) [0x00A6E312]\n   \t(No symbol) [0x00AE517B]\n   \t(No symbol) [0x00AF55A6]\n   \t(No symbol) [0x00ADF2F6]\n   \t(No symbol) [0x00AB79B9]\n   \t(No symbol) [0x00AB879D]\n   \tsqlite3_dbdata_init [0x01129A83+4064547]\n   \tsqlite3_dbdata_init [0x0113108A+4094762]\n   \tsqlite3_dbdata_init [0x0112B988+4072488]\n   \tsqlite3_dbdata_init [0x00E2C9E9+930953]\n   \t(No symbol) [0x00BF0804]\n   \t(No symbol) [0x00BEAD28]\n   \t(No symbol) [0x00BEAE51]\n   \t(No symbol) [0x00BDCAC0]\n   \tBaseThreadInitThunk [0x77B1FCC9+25]\n   \tRtlGetAppContainerNamedObjectPath [0x77D37C5E+286]\n   \tRtlGetAppContainerNamedObjectPath [0x77D37C2E+238]\n", "test_name": "testReceiverReceivesEnvelope", "rerun": "0"}, "1": {"status": "FAIL", "message": "   selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\n   from unknown error: web view not found\n     (Session info: chrome=123.0.6312.106)\n   Stacktrace:\n   \tGetHandleVerifier [0x00CB4CE3+225091]\n   \t(No symbol) [0x00BE4E31]\n   \t(No symbol) [0x00A89A7A]\n   \t(No symbol) [0x00A6E312]\n   \t(No symbol) [0x00AE517B]\n   \t(No symbol) [0x00AF55A6]\n   \t(No symbol) [0x00ADF2F6]\n   \t(No symbol) [0x00AB79B9]\n   \t(No symbol) [0x00AB879D]\n   \tsqlite3_dbdata_init [0x01129A83+4064547]\n   \tsqlite3_dbdata_init [0x0113108A+4094762]\n   \tsqlite3_dbdata_init [0x0112B988+4072488]\n   \tsqlite3_dbdata_init [0x00E2C9E9+930953]\n   \t(No symbol) [0x00BF0804]\n   \t(No symbol) [0x00BEAD28]\n   \t(No symbol) [0x00BEAE51]\n   \t(No symbol) [0x00BDCAC0]\n   \tBaseThreadInitThunk [0x77B1FCC9+25]\n   \tRtlGetAppContainerNamedObjectPath [0x77D37C5E+286]\n   \tRtlGetAppContainerNamedObjectPath [0x77D37C2E+238]\n", "test_name": "test_verify_receiver_receives_copy", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 2, "total_error": 0}}, "12": {"suite_name": "test_void_envelope.py", "tests": {"0": {"status": "FAIL", "message": "   selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\n   from unknown error: web view not found\n     (Session info: chrome=123.0.6312.106)\n   Stacktrace:\n   \tGetHandleVerifier [0x00CB4CE3+225091]\n   \t(No symbol) [0x00BE4E31]\n   \t(No symbol) [0x00A89A7A]\n   \t(No symbol) [0x00A6E312]\n   \t(No symbol) [0x00AE517B]\n   \t(No symbol) [0x00AF55A6]\n   \t(No symbol) [0x00ADF2F6]\n   \t(No symbol) [0x00AB79B9]\n   \t(No symbol) [0x00AB879D]\n   \tsqlite3_dbdata_init [0x01129A83+4064547]\n   \tsqlite3_dbdata_init [0x0113108A+4094762]\n   \tsqlite3_dbdata_init [0x0112B988+4072488]\n   \tsqlite3_dbdata_init [0x00E2C9E9+930953]\n   \t(No symbol) [0x00BF0804]\n   \t(No symbol) [0x00BEAD28]\n   \t(No symbol) [0x00BEAE51]\n   \t(No symbol) [0x00BDCAC0]\n   \tBaseThreadInitThunk [0x77B1FCC9+25]\n   \tRtlGetAppContainerNamedObjectPath [0x77D37C5E+286]\n   \tRtlGetAppContainerNamedObjectPath [0x77D37C2E+238]\n", "test_name": "test_void_envelope", "rerun": "0"}, "1": {"status": "FAIL", "message": "   selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\n   from unknown error: web view not found\n     (Session info: chrome=123.0.6312.106)\n   Stacktrace:\n   \tGetHandleVerifier [0x00CB4CE3+225091]\n   \t(No symbol) [0x00BE4E31]\n   \t(No symbol) [0x00A89A7A]\n   \t(No symbol) [0x00A6E312]\n   \t(No symbol) [0x00AE517B]\n   \t(No symbol) [0x00AF55A6]\n   \t(No symbol) [0x00ADF2F6]\n   \t(No symbol) [0x00AB79B9]\n   \t(No symbol) [0x00AB879D]\n   \tsqlite3_dbdata_init [0x01129A83+4064547]\n   \tsqlite3_dbdata_init [0x0113108A+4094762]\n   \tsqlite3_dbdata_init [0x0112B988+4072488]\n   \tsqlite3_dbdata_init [0x00E2C9E9+930953]\n   \t(No symbol) [0x00BF0804]\n   \t(No symbol) [0x00BEAD28]\n   \t(No symbol) [0x00BEAE51]\n   \t(No symbol) [0x00BDCAC0]\n   \tBaseThreadInitThunk [0x77B1FCC9+25]\n   \tRtlGetAppContainerNamedObjectPath [0x77D37C5E+286]\n   \tRtlGetAppContainerNamedObjectPath [0x77D37C2E+238]\n", "test_name": "test_verify_void_notification", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 2, "total_error": 0}}}}, "date": "April 07, 2024", "start_time": 1712454896.6817126, "total_suite": 13, "status": "FAIL", "status_list": {"pass": "4", "fail": "12", "skip": "0", "error": "2", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "18"}